using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace EX4_CS
{
    internal class TriangleRectangle : FormesGeometriques
    {
        public TriangleRectangle(){}

        public TriangleRectangle(double base_, double hauteur)
        {
            Console.WriteLine( " constructeur de TriangleRectangle  \n");
            base_ = 0;
            hauteur = 0;
        }

        public override double CalculerSurface(double base_, double hauteur)
        // don't delete the following line as it's needed to preserve source code of this autogenerated element
        // section -64--88-1-58--553bbdf8:13b14881301:-8000:0000000000000D60 begin
        {
            Surface = (base_ * hauteur) / 2;
            return (Surface);
        }
        // section -64--88-1-58--553bbdf8:13b14881301:-8000:0000000000000D60 end
        // don't delete the previous line as it's needed to preserve source code of this autogenerated element

        public override double CalculerPerimetre(double base_, double hauteur)
        // don't delete the following line as it's needed to preserve source code of this autogenerated element
        // section -64--88-1-58--553bbdf8:13b14881301:-8000:0000000000000D64 begin
        {
            // Calculer la longueur de l'hypoténuse en utilisant le théorème de Pythagore
            double  hypothenuse = Math.Sqrt(base_ * base_ + hauteur * hauteur);
        
            // Calculer le périmètre en additionnant les trois côtés
            Perimetre = base_ + hauteur + hypothenuse;
        
            return Perimetre;
        }






    }
}
